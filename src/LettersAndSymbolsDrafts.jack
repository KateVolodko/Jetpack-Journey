class LettersAndSymbolsDrafts {
	function int drawS(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 1),
      cursorPosX + (size * 1),
      cursorPosY + (size * 3)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 3),
      cursorPosX + (size * 4),
      cursorPosY + (size * 4)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 4),
      cursorPosX + (size * 5),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 6),
      cursorPosX + (size * 4),
      cursorPosY + (size * 7)
    );
    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawC(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 1),
      cursorPosX + (size * 1),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 6),
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawT(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 2),
      cursorPosY + (size * 1),
      cursorPosX + (size * 3),
      cursorPosY + (size * 7)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawI(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 2),
      cursorPosY + (size * 1),
      cursorPosX + (size * 3),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 6),
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawP(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY,
      cursorPosX + (size * 4),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 1),
      cursorPosX + (size * 5),
      cursorPosY + (size * 3)
    );
    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 3),
      cursorPosX + (size * 4),
      cursorPosY + (size * 4)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawA(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY,
      cursorPosX + (size * 4),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 1),
      cursorPosX + (size * 1),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 4),
      cursorPosX + (size * 4),
      cursorPosY + (size * 5)
    );
    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 1),
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawJ(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX + (size * 2),
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 3),
      cursorPosY + (size * 1),
      cursorPosX + (size * 4),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 6),
      cursorPosX + (size * 3),
      cursorPosY + (size * 7)
    );
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 5),
      cursorPosX + (size * 1),
      cursorPosY + (size * 6)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawK(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 2),
      cursorPosX + (size * 3),
      cursorPosY + (size * 3)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 4),
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );
    do Screen.drawRectangle(
      cursorPosX + (size * 3),
      cursorPosY + (size * 3),
      cursorPosX + (size * 4),
      cursorPosY + (size * 4)
    );
    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 1)
    );
    do Screen.drawRectangle(
      cursorPosX + (size * 3),
      cursorPosY + (size * 1),
      cursorPosX + (size * 4),
      cursorPosY + (size * 2)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawU(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 6),
      cursorPosX + (size * 4),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 6)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawN(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 2),
      cursorPosX + (size * 2),
      cursorPosY + (size * 3)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 2),
      cursorPosY + (size * 3),
      cursorPosX + (size * 3),
      cursorPosY + (size * 4)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 3),
      cursorPosY + (size * 4),
      cursorPosX + (size * 4),
      cursorPosY + (size * 5)
    );
    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawY(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 2)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 2),
      cursorPosX + (size * 2),
      cursorPosY + (size * 3)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 2),
      cursorPosY + (size * 3),
      cursorPosX + (size * 4),
      cursorPosY + (size * 4)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 6),
      cursorPosX + (size * 4),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 6)
    );
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 5),
      cursorPosX + (size * 1),
      cursorPosY + (size * 6)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawB(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 4),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 6),
      cursorPosX + (size * 4),
      cursorPosY + (size * 7)
    );
    
    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 1),
      cursorPosX + (size * 5),
      cursorPosY + (size * 3)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 2),
      cursorPosX + (size * 5),
      cursorPosY + (size * 6)
    );
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 3),
      cursorPosX + (size * 4),
      cursorPosY + (size * 4)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawM(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 1),
      cursorPosX + (size * 2),
      cursorPosY + (size * 2)
    );
    
    do Screen.drawRectangle(
      cursorPosX + (size * 3),
      cursorPosY + (size * 1),
      cursorPosX + (size * 4),
      cursorPosY + (size * 2)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 2),
      cursorPosY + (size * 3),
      cursorPosX + (size * 3),
      cursorPosY + (size * 4)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawR(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX + size,
      cursorPosY,
      cursorPosX + (size * 4),
      cursorPosY + size
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + size,
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 1),
      cursorPosX + (size * 5),
      cursorPosY + (size * 3)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 3),
      cursorPosX + (size * 4),
      cursorPosY + (size * 4)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 4),
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawE(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 5),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 3),
      cursorPosX + (size * 4),
      cursorPosY + (size * 4)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 6),
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawO(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY,
      cursorPosX + (size * 4),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 1),
      cursorPosX + (size * 1),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 6),
      cursorPosX + (size * 4),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 1),
      cursorPosX + (size * 5),
      cursorPosY + (size * 6)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawQ(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 5 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY,
      cursorPosX + (size * 4),
      cursorPosY + (size * 1)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 1),
      cursorPosX + (size * 1),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 1),
      cursorPosY + (size * 6),
      cursorPosX + (size * 4),
      cursorPosY + (size * 7)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 1),
      cursorPosX + (size * 5),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 2),
      cursorPosY + (size * 5),
      cursorPosX + (size * 3),
      cursorPosY + (size * 6)
    );

    do Screen.drawRectangle(
      cursorPosX + (size * 4),
      cursorPosY + (size * 6),
      cursorPosX + (size * 5),
      cursorPosY + (size * 7)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawColon(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 1 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 1),
      cursorPosX + (size * 1),
      cursorPosY + (size * 2)
    );

    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY + (size * 4),
      cursorPosX + (size * 1),
      cursorPosY + (size * 5)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }

  function int drawQuote(int cursorPosX, int cursorPosY, int size, int space, boolean color) {
    var int width;
    let width = 1 * size;

    do Screen.setColor(color);
    do Screen.drawRectangle(
      cursorPosX,
      cursorPosY,
      cursorPosX + (size * 1),
      cursorPosY + (size * 3)
    );

    let cursorPosX = cursorPosX + width + space;
    return cursorPosX;
  }
}